name: Release on New Version in package.json

on:
  push:
    branches:
      - ms/release

jobs:
  release-if-new-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from package.json
        id: get_version
        run: |
          version=$(jq -r .version package.json)
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Check if tag already exists
        id: check_tag
        run: |
          tag="v${{ steps.get_version.outputs.version }}"
          if git ls-remote --exit-code --tags origin "$tag" > /dev/null; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Stop if tag exists
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "Tag v${{ steps.get_version.outputs.version }} already exists. Skipping release."
          exit 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build extension
        run: pnpm build

      - name: Zip dist folder
        run: |
          cd dist
          zip -r ../extension.zip .

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          files: extension.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
